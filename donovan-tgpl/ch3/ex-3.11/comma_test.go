package main

import "testing"

var commaTests []struct {
	left  string
	right string
}

func init() {
	commaTests = []struct {
		left  string
		right string
	}{
		{"", ""},
		{"1", "1"},
		{"12", "12"},
		{"123", "123"},
		{"1234", "1,234"},
		{"12345", "12,345"},
		{"123456", "123,456"},
		{"123456789", "123,456,789"},
		{"+", "+"},
		{"+1", "+1"},
		{"+12", "+12"},
		{"+123", "+123"},
		{"+1234", "+1,234"},
		{"+12345", "+12,345"},
		{"+123456", "+123,456"},
		{"+123456789", "+123,456,789"},
		{"-", "-"},
		{"-1", "-1"},
		{"-12", "-12"},
		{"-123", "-123"},
		{"-1234", "-1,234"},
		{"-12345", "-12,345"},
		{"-123456", "-123,456"},
		{"-123456789", "-123,456,789"},
		{"1.0123", "1.0123"},
		{"12.0123", "12.0123"},
		{"123.0123", "123.0123"},
		{"1234.11", "1,234.11"},
		{"12345.11", "12,345.11"},
		{"123456.11", "123,456.11"},
		{"123456789.11", "123,456,789.11"},
		{"+1.0123", "+1.0123"},
		{"+12.0123", "+12.0123"},
		{"+123.0123", "+123.0123"},
		{"+1234.11", "+1,234.11"},
		{"+12345.11", "+12,345.11"},
		{"+123456.11", "+123,456.11"},
		{"+123456789.11", "+123,456,789.11"},
		{"-1.0123", "-1.0123"},
		{"-12.0123", "-12.0123"},
		{"-123.0123", "-123.0123"},
		{"-1234.11", "-1,234.11"},
		{"-12345.11", "-12,345.11"},
		{"-123456.11", "-123,456.11"},
		{"-123456789.11", "-123,456,789.11"},
	}
}

func TestIterativeComma(t *testing.T) {
	for _, row := range commaTests {
		if IterativeComma(row.left) != row.right {
			t.Errorf("left:  %v", IterativeComma(row.left))
			t.Errorf("right: %v\n", row.right)
			t.Fail()
		}
	}
}
